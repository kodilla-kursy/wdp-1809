// Mixins
// --------------------------

@mixin fa-icon {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  vertical-align: -.125em;
}

@mixin fa-icon-rotate($degrees, $rotation) {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation})";
  transform: rotate($degrees);
}

@mixin fa-icon-flip($horiz, $vert, $rotation) {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation}, mirror=1)";
  transform: scale($horiz, $vert);
}


// Only display content to screen readers. A la Bootstrap 4.
//
// See: http://a11yproject.com/posts/how-to-hide-content/

@mixin sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {
  &:active,
  &:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}

//Custome mixin :

//for small tablet

@mixin medium-small {
  @media (max-width: #{$bp-small}) {
    @content;
  }
}

//for middle breakpoint'


@mixin medium-400 {
  @media(max-width: 400px) {
    @content;
  }
}

@mixin medium-up {
  @media(min-width: #{$bp-medium}) {
    @content;
  }
}

@mixin medium-high2 {
  @media (min-width: $bp-small) {
    @content;
  }
}

@mixin mobile {
  @media (min-width: $bp-small2) and (max-width: $bp-small) {
    @content;
  }
}

@mixin smartfon {
  @media (min-width:$bp-small2 ) and (max-width: $bp-very-small ) {
    @content;
  }
}

//Static controll this bp

@mixin smartfonS {
  @media (min-width: 360px) and (max-width: 431px )  {
    @content;
  }
}

@mixin smartfonS1 {
  @media (min-width: 200px) and (max-width: 359px )  {
    @content;
  }
}


@mixin medium-high {
  @media (min-width: $bp-middle)  and (max-width: $bp-desktop )  {
    @content;
  }
}

@mixin medium-992 {
  @media (min-width: $bp-middle) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: $bp-small) and (max-width: $bp-small) {
    @content;
  }
}

//for large breakpoint'

@mixin large-up {
  @media(min-width: #{$bp-large}) {
    @content;
  }
}
//Grayscale
@mixin grayscale_element($value) {
  -webkit-filter: grayscale($value);
  -moz-filter: grayscale($value);
  filter: grayscale($value);
}



$breakpoints: (
        small: 767px,
        medium: 992px,
        large: 1200px
);

// _mixins.scss
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}



// Center items

@mixin centererPos($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}

@mixin animation($content) {
  animation: $content;
  -moz-animation: $content;
  -webkit-animation: $content;
}

@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

@mixin box-shadow($top, $left, $blur, $size, $color) {
  -webkit-box-shadow: $top $left $blur $size $color;
  -moz-box-shadow: $top $left $blur $size $color;
  -o-box-shadow: $top $left $blur $size $color;
  box-shadow: $top $left $blur $size $color;
}


//braekpoint

// Medium devices (tablets, 768px and up)
@mixin medium-up {
  @media (min-width: #{$bp-medium}) {
    @content;
  }
}

@mixin large-up {
  @media(min-width: #{$bp-large}) {
    @content;
  }
}

@mixin tab-focus() {
  -webkit-appearance: none;
  -moz-appearance: none;
  text-indent: 1px;
  text-overflow: '';
}